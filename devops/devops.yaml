apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: local-pv
spec:
  capacity:
    storage: 2Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage
  local:
    path: /var/local-vol
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - minikube
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: docker-pvc
spec:
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage
  accessModes:
  - ReadWriteOnce
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: agent-pvc
spec:
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage
  accessModes:
  - ReadWriteOnce
---
apiVersion: v1
kind: Pod
metadata:
  name: docker
  labels:
    run: docker
    role: devops
spec:
  # nodeName: minikube
  containers:
  - name: docker
    env:
      - name: DOCKER_HOST
        value: unix:///var/socket/docker.sock
    image: docker:dind
    securityContext:
      privileged: true
    volumeMounts:
      - name: docker-pvc
        mountPath: /var/lib/docker
        subPath: docker
      - name: docker-pvc
        mountPath: /var/socket
        subPath: socket
  volumes:
    - name: docker-pvc
      persistentVolumeClaim:
        claimName: docker-pvc
---
apiVersion: v1
kind: Pod
metadata:
  name: agent
  labels:
    run: agent
    role: devops
spec:
  nodeName: minikube
  containers:
  - name: agent
    image: alpine/curl:latest
    command: [ "/bin/sleep", "9999999" ]
    volumeMounts:
    - name: docker-pvc
      mountPath: /var/socket/
      subPath: socket
  volumes:
  - name: docker-pvc
    persistentVolumeClaim:
      claimName: docker-pvc
