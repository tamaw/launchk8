apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: local-pv
spec:
  capacity:
    storage: 2Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage
  local:
    path: /var/local-vol
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - minikube
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: local-pvc
spec:
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage
  accessModes:
  - ReadWriteOnce
---
apiVersion: v1
kind: Pod
metadata:
  name: docker
  labels:
    run: docker
    role: devops
spec:
  containers:
  - name: docker
    env:
      - name: DOCKER_HOST
        value: unix:///var/socket/docker.sock
    image: docker:dind
    securityContext:
      privileged: true
    volumeMounts:
      - name: local-vol
        mountPath: /var/lib/docker
        subPath: docker
      - name: local-vol
        mountPath: /var/socket
        subPath: socket
  volumes:
    - name: local-vol
      persistentVolumeClaim:
        claimName: local-pvc
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: devops-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: deploy-role
rules:
  - apiGroups: [""]
    resources:
      - pods
      - services
    verbs:
      - get
      - list
      - create
  - apiGroups: ["apps"]
    resources:
      - deployments
    verbs:
      - get
      - list
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: devops-deploy-bind
subjects:
  - kind: ServiceAccount
    name: devops-sa
roleRef:
  kind: Role
  name: deploy-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Pod
metadata:
  name: agent
  labels:
    run: action-runner
    role: devops
spec:
  serviceAccountName: devops-sa
  containers:
  - name: agent
    image: agent:v1
    imagePullPolicy: IfNotPresent
    env:
    - name: DOCKER_HOST
      value: unix:///var/socket/docker.sock
    - name: GIT_SSH_COMMAND
      value: 'ssh -i /etc/ssh_keys/ssh-github -o IdentitiesOnly=yes'
    volumeMounts:
    - name: local-vol
      mountPath: /var/socket/
      subPath: socket
    - name: local-vol
      mountPath: /var/_work/
      subPath: _work
    - name: ssh-keys-vol
      readOnly: true
      mountPath: /etc/ssh_keys
  volumes:
  - name: local-vol
    persistentVolumeClaim:
      claimName: local-pvc
  - name: ssh-keys-vol
    secret:
      defaultMode: 292
      secretName: ssh-key-secret
---
apiVersion: v1
kind: Pod
metadata:
  name: registry
  labels:
    run: registry
    role: devops
spec:
  containers:
  - name: registry
    image: registry:2
    env:
    - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
      value: /var/registry
    - name: REGISTRY_AUTH
      value: htpasswd
    - name: REGISTRY_AUTH_HTPASSWD_REALM
      value: basic_realm
    - name: REGISTRY_AUTH_HTPASSWD_PATH
      value: /etc/auth/htpasswd
    - name: REGISTRY_HTTP_TLS_CERTIFICATE
      value: /etc/certs/tls.crt
    - name: REGISTRY_HTTP_TLS_KEY
      value: /etc/certs/tls.key
    ports:
    - containerPort: 5000
      name: registry-port
    volumeMounts:
      - name: local-vol
        mountPath: /var/registry
        subPath: registry
      - name: certs-vol
        mountPath: /etc/certs
        readOnly: true
      - name: auth-vol
        mountPath: /etc/auth
        readOnly: true
  volumes:
    - name: local-vol
      persistentVolumeClaim:
        claimName: local-pvc
    - name: certs-vol
      secret:
        secretName: registry-cert
    - name: auth-vol
      secret:
        secretName: registry-auth
---
apiVersion: v1
kind: Service
metadata:
  name: registry-svc
  labels:
    role: devops
spec:
  selector:
    run: registry
  ports:
  - protocol: TCP
    port: 5000
    targetPort: registry-port
---